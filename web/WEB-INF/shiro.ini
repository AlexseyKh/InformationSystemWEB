
[main] 

cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager


ds = org.apache.shiro.jndi.JndiObjectFactory   
ds.requiredType = javax.sql.DataSource  
ds.resourceName = jdbc/InformationSystemPool

# realm to be used
JdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
# any object property is automatically configurable in Shiro.ini file
JdbcRealm.dataSource=$ds
# the realm should handle also authorization
JdbcRealm.permissionsLookupEnabled=true 

# If not filled, subclasses of JdbcRealm assume "select password from users where username = ?"
# first result column is password, second result column is salt 
JdbcRealm.authenticationQuery = select u.PASSWORD from USER_SEC u where u.USERNAME = ?
# If not filled, subclasses of JdbcRealm assume "select role_name from user_roles where username = ?"
JdbcRealm.userRolesQuery = select r.NAME from ROLE_SEC r, USER_ROLE ur, USER_SEC u where r.ID = ur.ROLE_ID and ur.USER_ID = u.ID and u.USERNAME = ?
# If not filled, subclasses of JdbcRealm assume "select permission from roles_permissions where role_name = ?"
JdbcRealm.permissionsQuery = select p.NAME from PERMISSION_SEC p, ROLE_PERMISSION rp, ROLE_SEC r where p.ID = rp.ROLE_ID and rp.PERMISSION_ID = p.ID and r.NAME = ?


# password hashing specification
#sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
#sha256Matcher.hashAlgorithmName=SHA-256
#JdbcRealm.credentialsMatcher = $sha256Matcher

shiro.loginUrl = /login.jsp
# redirect after successful login
authc.successUrl  = /afterLogin

[urls]
/login.jsp = authc
/logout = logout
/pages/** = authc